#use "hw7-code.ml";;

1a
	starting_config asbs "";;
	- : ’a list * string * string list = ([], "start", [">"])

	starting_config asbs "ab";;
	- : ’a list * string * string list = ([], "start", [">"; "a"; "b"])
	
	starting_config asbs "aaaabbbaa";;
	- : ’a list * string * string list =
	([], "start", [">"; "a"; "a"; "a"; "a"; "b"; "b"; "b"; "a"; "a"])
	
	starting_config anbn "";;
	- : ’a list * string * string list = ([], "start", [">"])
	
	starting_config anbn "aabb";;
	- : ’a list * string * string list =
	([], "start", [">"; "a"; "a"; "b"; "b"])
	
	starting_config anbn "aabbaa";;
	- : ’a list * string * string list =
	([], "start", [">"; "a"; "a"; "b"; "b"; "a"; "a"])

1b
	accepting_config asbs ([], "start", ["_"]);;
- : bool = false
	
	accepting_config asbs ([], "q1", [">"; "a"; "_"]);;
	- : bool = false
	
	accepting_config asbs (["b"], "acc", [">"; "a"; "_"]);;
	- : bool = true
	
	accepting_config asbs (["b"], "rej", [">"; "a"; "_"]);;
	- : bool = false
	
	rejecting_config asbs ([], "start", ["_"]);;
	- : bool = false
	
	rejecting_config asbs ([], "q1", [">"; "a"; "_"]);;
	- : bool = false
	
	rejecting_config asbs (["b"], "acc", [">"; "a"; "_"]);;
	- : bool = false
	
	rejecting_config asbs (["b"], "rej", [">"; "a"; "_"]);;
	- : bool = true
	
	halting_config asbs ([], "start", ["_"]);;
	- : bool = false
	
	halting_config asbs ([], "q1", [">"; "a"; "_"]);;
	- : bool = false
	
	halting_config asbs (["b"], "acc", [">"; "a"; "_"]);;
	- : bool = true
	
	halting_config asbs (["b"], "rej", [">"; "a"; "_"]);;
	- : bool = true

1c
	step_config asbs ([], "start", ["_"]);;
	- : char list * string * char list = (["_"], "acc", [])
	
	step_config asbs ([">"; "a"], "start", ["b"; "b"]);;
	- : char list * string * char list = ([">"; "a"; "b"], "q1", ["b"])
	
	step_config asbs ([">"; "a"], "q1", ["a"; "b"]);;
	- : char list * string * char list = ([">"; "a"; "a"], "rej", ["b"])
	
	step_config asbs ([">"; "a"], "q1", ["b"; "b"]);;
	- : char list * string * char list = ([">"; "a"; "b"], "q1", ["b"])
	
	step_config anbn ([">"; "a"; "b"], "q1", ["_"]);;
	- : char list * string * char list = ([">"; "a"; "b"; "_"], "q2", [])
	
	step_config anbn ([">"; "a"; "b"], "q2", ["_"]);;
	- : char list * string * char list = ([">"; "a"], "q2", ["b"; "_"])
	
	step_config anbn ([">"], "q3", ["a";"b"]);;
	- : char list * string * char list = ([">"; "X"], "q4", ["b"])
	
	step_config anbn ([">";"X"], "q4", ["b"]);;
	- : char list * string * char list = ([">"; "X"; "X"], "q2", [])

1d
	run asbs "aab";;
	(start) > a a b
	> (start) a a b
	> a (start) a b
	> a a (start) b
	> a a b (q1)
	> a a b _ (acc)
	- : bool = true
	
	run anbn "aabb";;
	(start) > a a b b
	> (start) a a b b
	> a (start) a b b
	> a a (start) b b
	> a a b (q1) b
	> a a b b (q1)
	> a a b b _ (q2)
	> a a b b (q2) _ _
	> a a b (q2) b _ _
	> a a (q2) b b _ _
	> a (q2) a b b _ _
	> (q2) a a b b _ _
	(q2) > a a b b _ _
	> (q3) a a b b _ _
	> X (q4) a b b _ _
	> X a (q4) b b _ _
	> X a X (q2) b _ _
	> X a (q2) X b _ _
	> X (q2) a X b _ _
	> (q2) X a X b _ _
	(q2) > X a X b _ _
	> (q3) X a X b _ _
	> X (q3) a X b _ _
	> X X (q4) X b _ _
	> X X X (q4) b _ _
	> X X X X (q2) _ _
	> X X X (q2) X _ _
	> X X (q2) X X _ _
	> X (q2) X X X _ _
	> (q2) X X X X _ _
	(q2) > X X X X _ _
	> (q3) X X X X _ _
	> X (q3) X X X _ _
	> X X (q3) X X _ _
	> X X X (q3) X _ _
	> X X X X (q3) _ _
	> X X X X _ (acc) _
	- : bool = true
	
	run anbncn "aabbcc";;
	(start) > a a b b c c
	> (start) a a b b c c
	> a (start) a b b c c
	> a a (start) b b c c
	> a a b (q1) b c c
	> a a b b (q1) c c
	> a a b b c (q6) c
	> a a b b c c (q6)
	> a a b b c c _ (q2)
	> a a b b c c (q2) _ _
	> a a b b c (q2) c _ _
	> a a b b (q2) c c _ _
	> a a b (q2) b c c _ _
	> a a (q2) b b c c _ _
	> a (q2) a b b c c _ _
	> (q2) a a b b c c _ _
	(q2) > a a b b c c _ _
	> (q3) a a b b c c _ _
	> X (q4) a b b c c _ _
	> X a (q4) b b c c _ _
	> X a X (q5) b c c _ _
	> X a X b (q5) c c _ _
	> X a X b X (q2) c _ _
	> X a X b (q2) X c _ _
	> X a X (q2) b X c _ _
	> X a (q2) X b X c _ _
	> X (q2) a X b X c _ _
	> (q2) X a X b X c _ _
	(q2) > X a X b X c _ _
	> (q3) X a X b X c _ _
	> X (q3) a X b X c _ _
	> X X (q4) X b X c _ _
	> X X X (q4) b X c _ _
	> X X X X (q5) X c _ _
	> X X X X X (q5) c _ _
	> X X X X X X (q2) _ _
	> X X X X X (q2) X _ _
	> X X X X (q2) X X _ _
	> X X X (q2) X X X _ _
	> X X (q2) X X X X _ _
	> X (q2) X X X X X _ _
	> (q2) X X X X X X _ _
	(q2) > X X X X X X _ _
	> (q3) X X X X X X _ _
	> X (q3) X X X X X _ _
	> X X (q3) X X X X _ _
	> X X X (q3) X X X _ _
	> X X X X (q3) X X _ _
	> X X X X X (q3) X _ _
	> X X X X X X (q3) _ _
	> X X X X X X _ (acc) _
	- : bool = true
	
	run anbn "aabbbbb";;
	(start) > a a b b b b b
	> (start) a a b b b b b
	> a (start) a b b b b b
	> a a (start) b b b b b
	> a a b (q1) b b b b
	> a a b b (q1) b b b
	> a a b b b (q1) b b
	> a a b b b b (q1) b
	> a a b b b b b (q1)
	> a a b b b b b _ (q2)
	> a a b b b b b (q2) _ _
	> a a b b b b (q2) b _ _
	> a a b b b (q2) b b _ _
	> a a b b (q2) b b b _ _
	> a a b (q2) b b b b _ _
	> a a (q2) b b b b b _ _
	> a (q2) a b b b b b _ _
	> (q2) a a b b b b b _ _
	(q2) > a a b b b b b _ _
	> (q3) a a b b b b b _ _
	> X (q4) a b b b b b _ _
	> X a (q4) b b b b b _ _
	> X a X (q2) b b b b _ _
	> X a (q2) X b b b b _ _
	> X (q2) a X b b b b _ _
	> (q2) X a X b b b b _ _
	(q2) > X a X b b b b _ _
	> (q3) X a X b b b b _ _
	> X (q3) a X b b b b _ _
	> X X (q4) X b b b b _ _
	> X X X (q4) b b b b _ _
	> X X X X (q2) b b b _ _
	> X X X (q2) X b b b _ _
	> X X (q2) X X b b b _ _
	> X (q2) X X X b b b _ _
	> (q2) X X X X b b b _ _
	(q2) > X X X X b b b _ _
	> (q3) X X X X b b b _ _
	> X (q3) X X X b b b _ _
	> X X (q3) X X b b b _ _
	> X X X (q3) X b b b _ _
	> X X X X (q3) b b b _ _
	> X X X X b (rej) b b _ _
	- : bool = false

2a
	run question2a "abab";;
	run question2a "aabbaabb";;
	run question2a "aaabbbaaabbb";;
	run question2a "ababb";;

2b
	run question2b "aba";;
	run question2b "aabbaaaa";;
	run question2b "aaabbbaaaaaaaaa";;
	run question2b "abbaa";;
	run question2b "abbbaa";;

3
	run binary_sum "";;
	(start) >
	...
	- : bool = false
	
	run binary_sum "##";;
	(start) > # #
	...
	- : bool = false
	
	run binary_sum "000";;
	(start) > 0 0 0
	...
	- : bool = false
	
	run binary_sum "000#000";;
	(start) > 0 0 0 # 0 0 0
	...
	- : bool = false
	
	run binary_sum "000##000";;
	(start) > 0 0 0 # # 0 0 0
	...
	- : bool = false
	
	run binary_sum "000#000#000";;
	(start) > 0 0 0 # 0 0 0 # 0 0 0
	...
	- : bool = true
	
	run binary_sum "001#000#001";;
	(start) > 0 0 1 # 0 0 0 # 0 0 1
	...
	- : bool = true
	
	run binary_sum "001#000#000";;
	(start) > 0 0 1 # 0 0 0 # 0 0 0
	...
	- : bool = false
	
	run binary_sum "001#001#000";;
	(start) > 0 0 1 # 0 0 1 # 0 0 0
	...
	- : bool = true
	# run binary_sum "011#001#000";;
	(start) > 0 1 1 # 0 0 1 # 0 0 0
	...
	- : bool = false
	# run binary_sum "010#001#001";;
	(start) > 0 1 0 # 0 0 1 # 0 0 1
	...
	- : bool = true
	# run binary_sum "011#001#001";;
	(start) > 0 1 1 # 0 0 1 # 0 0 1
	...
	- : bool = false
	# run binary_sum "110#001#001";;
	(start) > 1 1 0 # 0 0 1 # 0 0 1
	...
	- : bool = false
	# run binary_sum "110#101#001";;
	(start) > 1 1 0 # 1 0 1 # 0 0 1
	...
	- : bool = true
	# run binary_sum "111#101#010";;
	(start) > 1 1 1 # 1 0 1 # 0 1 0
	...
	- : bool = true
	# run binary_sum "111#101#10";;
	(start) > 1 1 1 # 1 0 1 # 1 0
	...
	- : bool = false
	# run binary_sum "11110#00111#10101";;
	(start) > 1 1 1 1 0 # 0 0 1 1 1 # 1 0 1 0 1
	...
	- : bool = false
	# run binary_sum "11100#00111#10101";;
	...
	- : bool = true